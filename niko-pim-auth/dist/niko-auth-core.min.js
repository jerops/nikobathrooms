/*! Niko Bathrooms Authentication System v1.0.0 */
(function(window) {
    'use strict';
    
    // Initialize the Niko PIM namespace
    window.NikoPIM = window.NikoPIM || {};
    
    // Configuration
    var config = window.nikoAuthConfig || {};
    
    // Supabase client will be initialized dynamically
    var supabase = null;
    
    // Initialize Supabase when available
    function initSupabase() {
        if (window.supabase && config.supabaseUrl && config.supabaseKey) {
            supabase = window.supabase.createClient(config.supabaseUrl, config.supabaseKey);
            console.log('✅ Supabase client initialized for Niko Bathrooms');
            return true;
        }
        return false;
    }
    
    // Wait for Supabase to be loaded
    function waitForSupabase(callback) {
        var attempts = 0;
        var maxAttempts = 50; // 5 seconds maximum wait
        
        function checkSupabase() {
            if (initSupabase()) {
                callback();
            } else if (attempts < maxAttempts) {
                attempts++;
                setTimeout(checkSupabase, 100);
            } else {
                console.error('❌ Supabase failed to load after 5 seconds');
            }
        }
        
        checkSupabase();
    }
    
    // Authentication methods
    window.NikoPIM.register = function(email, password, name, userType) {
        return new Promise(function(resolve, reject) {
            if (!supabase) {
                waitForSupabase(function() {
                    performRegistration(email, password, name, userType, resolve, reject);
                });
            } else {
                performRegistration(email, password, name, userType, resolve, reject);
            }
        });
    };
    
    function performRegistration(email, password, name, userType, resolve, reject) {
        // Input validation
        if (!email || !password || !name || !userType) {
            reject(new Error('All fields are required'));
            return;
        }
        
        if (password.length < 6) {
            reject(new Error('Password must be at least 6 characters'));
            return;
        }
        
        // Register with Supabase
        supabase.auth.signUp({
            email: email,
            password: password,
            options: {
                data: {
                    name: name,
                    user_type: userType
                }
            }
        }).then(function(response) {
            if (response.error) {
                reject(response.error);
            } else {
                console.log('✅ User registered successfully');
                resolve(response);
            }
        }).catch(reject);
    }
    
    window.NikoPIM.login = function(email, password) {
        return new Promise(function(resolve, reject) {
            if (!supabase) {
                waitForSupabase(function() {
                    performLogin(email, password, resolve, reject);
                });
            } else {
                performLogin(email, password, resolve, reject);
            }
        });
    };
    
    function performLogin(email, password, resolve, reject) {
        supabase.auth.signInWithPassword({
            email: email,
            password: password
        }).then(function(response) {
            if (response.error) {
                reject(response.error);
            } else {
                console.log('✅ User logged in successfully');
                resolve(response);
            }
        }).catch(reject);
    }
    
    window.NikoPIM.logout = function() {
        return new Promise(function(resolve, reject) {
            if (!supabase) {
                reject(new Error('Supabase not initialized'));
                return;
            }
            
            supabase.auth.signOut().then(function(response) {
                console.log('✅ User logged out successfully');
                resolve(response);
            }).catch(reject);
        });
    };
    
    window.NikoPIM.getCurrentUser = function() {
        return new Promise(function(resolve, reject) {
            if (!supabase) {
                waitForSupabase(function() {
                    var user = supabase.auth.getUser();
                    resolve(user);
                });
            } else {
                var user = supabase.auth.getUser();
                resolve(user);
            }
        });
    };
    
    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🔐 Niko Bathrooms Authentication System Loaded');
            initSupabase();
        });
    } else {
        console.log('🔐 Niko Bathrooms Authentication System Loaded');
        initSupabase();
    }
    
})(window);